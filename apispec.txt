GET messages.php?offset=n&limit=y&scope=z
  Offset/limit controls pagination
  Scope controls "type" of messages: inbox, all, count

  DONE
  
GET profile.php?offset=n&limit=y&uid=z&type=q
  Offset/limit controls pagination
  UID: user
  Type: all/from/to
  
  DONE

GET users.php
  Response:
    { 'data': [
      { 'uid', 'name', 'avatar' }
      // + email, access
    ], 'uid', 'access' }

  DONE

POST send-message.php
  Request:
    { 'public', 'title', 'data', 'to': [ uids ], 'prev': ? }
  Response:
    { 'id': <for message>, 'date' }
	
  DONE

GET get-message.php?id=x
  Response:
    Message

  DONE

POST add-user.php
  Request:
    { 'name', 'email', 'access', 'avatar' }
  Response:
    { 'uid' }
	
  DONE

POST reset-user.php?uid=x
  Response:
    {}
	
  DONE

PUT update-user.php?uid=x
  Request:
    { 'name', 'email', 'access', 'avatar' }
  Response:
    {}
	
  DONE

PUT update-message.php?id=x
  Request:
    { 'title', 'data' }
  Response:
    {}
	
  DONE

DELETE remove-user.php?uid=x
  Response:
    {}
	
  DONE

DELETE remove-message.php?id=x
  Response:
    {}
	
  DONE

Headers:
  X-Session: <token>

Response Code 200/400/500
  Messages response spec
  >= 400:
    { 'message': string } // include everything, like "Error: something failed."

Message response spec:
  { 'data': [ ...messages... ], 'total': number }

Message:
  { 'id', 'public', 'title', 'data', 'from', 'to': [], 'prev': ?, 'date' }

$http.post('/send.php', {
  public: true,
  title: 'OHAIDERE',
  data: 'Hi Colby!',
  to: ['colby'],
  prev: null
}, {
  headers: {
    'x-session': <token>
  }
}).success(function(data, status, res) {
  // 
}).error(function(data, status, res) {
  // >= 400
});
